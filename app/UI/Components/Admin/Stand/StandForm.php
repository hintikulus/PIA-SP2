<?php

namespace App\UI\Components\Admin\Stand;

use App\Domain\Stand\Stand;
use App\Domain\Stand\StandFacade;
use App\UI\Components\Base\BaseComponent;
use App\UI\Form\BaseForm;
use Nette\Utils\ArrayHash;

class StandForm extends BaseComponent
{
    private StandFacade $standFacade;
    private ?Stand $stand;

    public function __construct(
        StandFacade $standFacade,
        ?Stand             $stand,
    )
    {
        $this->standFacade = $standFacade;
        $this->stand = $stand;
    }

    public function render(mixed $params = null): void
    {
        if($this->stand)
        {
            $this['form']->setDefaults([
                'name' => $this->stand->getName(),
                'latitude' => $this->stand->getLocation()->getLatitude(),
                'longtitude' => $this->stand->getLocation()->getLongitude(),
            ]);
        }

        parent::render($params); // TODO: Change the autogenerated stub
    }

    public function createComponentForm(): BaseForm
    {
        $form = new BaseForm();

        $form->addText('name', 'Název')
        ->setRequired();
        $form->addFloat('latitude', 'Zeměpisná šířka')
        ->setRequired();
        $form->addFloat('longtitude', 'Zeměpisná délka')
        ->setRequired();

        $form->addSubmit('send', 'Uložit');

        $form->onSuccess[] = [$this, 'formSucceeded'];

        return $form;
    }

    public function formSucceeded(BaseForm $form, ArrayHash $values): void
    {
        try
        {
            $this->standFacade->save($this->stand, $values['name'], $values['latitude'], $values['longtitude']);
            $this->flashSuccess('Stojan úspěšně uložen.');
        } catch (\Exception $e)
        {
            $this->flashError('Při ukládání se vyskytla chyba.');
        }
    }
}